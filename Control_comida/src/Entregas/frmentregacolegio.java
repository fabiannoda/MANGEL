/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Entregas;

import ControlC.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Angel Nodarse
 */
public class frmentregacolegio extends javax.swing.JFrame {

    /**
     * Creates new form frmentregacolegio
     */
    public frmentregacolegio() throws SQLException {
        initComponents();
        inicializar3();
        inicializar1 ();
        inicializar2();
        bloquear();
        
    }
    
    
    void limpiar(){
        txtnumero.setText("");
        txtregistro.setText("");
        txtcodigo.setText("");
        txtcantidad.setText("");
        txtdescripcion.setText("");
        
        
     }
     
     void bloquear() throws SQLException{
        txtnumero.setEnabled(true);
        txttipo.setEnabled(false);
        txtregistro.setEnabled(false);
        txtcantidad.setEnabled(false);
        txtcodigo.setEnabled(false);
        txtdescripcion.setEnabled(false);
        txtfecha.setEnabled(false);
        txtclasi.setEnabled(false);
        btninsertar.setEnabled(false);
        btnactualizar.setEnabled(false);
        btneliminar.setEnabled(false);
        java.util.Date d=new Date();
        txtfecha.setText(String.valueOf(d));
        
        
        
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtnumero = new javax.swing.JTextField();
        txtregistro = new javax.swing.JTextField();
        txtcodigo = new javax.swing.JTextField();
        txtcantidad = new javax.swing.JTextField();
        txtdescripcion = new javax.swing.JTextField();
        txtfecha = new javax.swing.JTextField();
        txttipo = new javax.swing.JComboBox<>();
        txtclasi = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btninsertar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnvolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel2.setText("Tabla de Proveedores");

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel1.setText("Numero de entrega");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel3.setText("Registro");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel4.setText("Codigo");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel5.setText("Fecha");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel6.setText("Tipo");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel7.setText("Clasificacion");

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel8.setText("Cantidad");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel9.setText("Descripción");

        txtnumero.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtnumero.setText("jTextField1");
        txtnumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumeroActionPerformed(evt);
            }
        });

        txtregistro.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N

        txtcodigo.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtcodigo.setText("jTextField3");

        txtcantidad.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtcantidad.setText("jTextField6");
        txtcantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantidadActionPerformed(evt);
            }
        });

        txtdescripcion.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtdescripcion.setText("jTextField7");
        txtdescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdescripcionActionPerformed(evt);
            }
        });

        txtfecha.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtfecha.setText("jTextField8");
        txtfecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfechaActionPerformed(evt);
            }
        });

        txttipo.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txttipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Almuerzo", "Refrigerio" }));
        txttipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttipoActionPerformed(evt);
            }
        });

        txtclasi.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        txtclasi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bebes", "Niños", "Adolescentes" }));
        txtclasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtclasiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jLabel10.setText("Tabla de Colegios");

        jTable2.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        btninsertar.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        btninsertar.setText("Insertar");
        btninsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertarActionPerformed(evt);
            }
        });

        btnactualizar.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        btneliminar.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnvolver.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        btnvolver.setText("Volver");
        btnvolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btninsertar)
                                    .addGap(123, 123, 123)
                                    .addComponent(btnactualizar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btneliminar))))
                        .addGap(18, 18, 18)
                        .addComponent(txttipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnvolver))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtclasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(jLabel2)
                                .addGap(174, 174, 174)
                                .addComponent(jLabel10)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtregistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtclasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btninsertar)
                    .addComponent(btnactualizar)
                    .addComponent(btneliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnvolver))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttipoActionPerformed
        // TODO add your handling code here:
        txtcantidad.setEnabled(true);
        txttipo.transferFocus();
    }//GEN-LAST:event_txttipoActionPerformed

    private void txtcantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantidadActionPerformed
        // TODO add your handling code here:
        txtdescripcion.setEnabled(true);
        txtcantidad.transferFocus();
    }//GEN-LAST:event_txtcantidadActionPerformed

    private void txtdescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdescripcionActionPerformed
        // TODO add your handling code here:
        txtclasi.setEnabled(true);
        
    }//GEN-LAST:event_txtdescripcionActionPerformed

    private void txtclasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtclasiActionPerformed
        // TODO add your handling code here:
        btninsertar.setEnabled(true);
    }//GEN-LAST:event_txtclasiActionPerformed

    private void btnvolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvolverActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnvolverActionPerformed

    private void txtfechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfechaActionPerformed

    private void btninsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertarActionPerformed
        // TODO add your handling code here:
        //insertar
        Conexion cc=new Conexion();
        Connection cn=cc.conex();
        String nu,co,re,ti,cla,can,des,fe,sql="";
        nu=txtnumero.getText();
        re=txtregistro.getText();
        cla=(String) txtclasi.getSelectedItem();
        des=txtdescripcion.getText();
        fe=txtfecha.getText();
        co=txtcodigo.getText();
        ti=(String) txttipo.getSelectedItem();
        can=txtcantidad.getText();
        sql="insert into tblcomida (Numero,Codigo,Registro,Tipo,Clasificacion,Cantidad,Descripcion,Fecha) values(?,?,?,?,?,?,?,?)";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            pst.setString(1,nu);
            pst.setString(2,co);
            pst.setString(3,re);
            pst.setString(4,ti);
            pst.setString(5,cla);
            pst.setString(6,can);
            pst.setString(7,des);
            pst.setString(8,fe);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Entrega registrada exitosamente");
                limpiar();
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Entrega fallida"+e.getMessage());
        }
       try {
            DefaultTableModel modelo=(DefaultTableModel) jTable3.getModel();
            int filas=jTable3.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    
        try {
            llenartabla3();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        try {
            bloquear();
        } catch (SQLException ex) {
            Logger.getLogger(frmentregacolegio.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }//GEN-LAST:event_btninsertarActionPerformed

    private void txtnumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumeroActionPerformed
        // TODO add your handling code here:
        txttipo.setEnabled(true);
    }//GEN-LAST:event_txtnumeroActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        // TODO add your handling code here:
        Conexion cc=new Conexion();
        Connection cn=cc.conex();
        String nu,co,re,ti,cla,can,des,fe,sql="";
        nu=txtnumero.getText();
        re=txtregistro.getText();
        cla=(String) txtclasi.getSelectedItem();
        des=txtdescripcion.getText();
        fe=txtfecha.getText();
        co=txtcodigo.getText();
        ti=(String) txttipo.getSelectedItem();
        can=txtcantidad.getText();
        sql="update tblcomida SET "
                +"Tipo= '"+ti+"',"
                +"Clasificacion= '"+cla+"',"
                +"Cantidad= '"+can+"',"
                +"Descripcion= '"+des+"',"
                +"Fecha= '"+fe+"'"
                +"WHERE Numero= '"+nu+"'";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Entrega actualizada exitosamente");
                limpiar();
                
            }else{
                 JOptionPane.showMessageDialog(null,"Entrega no encontrada. Recuerde introducir el mismo numero de entrega");
                limpiar();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Actualización fallida"+e.getMessage());
        }
       try {
            DefaultTableModel modelo=(DefaultTableModel) jTable3.getModel();
            int filas=jTable3.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    
        try {
            llenartabla3();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        try {
            bloquear();
        } catch (SQLException ex) {
            Logger.getLogger(frmentregacolegio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        //Eliminar
        Conexion cc=new Conexion();
        Connection cn=cc.conex();
        String re,sql="";
        re=txtnumero.getText();
        sql="delete from tblcomida where "
                +"Numero= '"+re+"'";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Datos de la entrega eliminada exitosamente");
                limpiar();
            }else{
                JOptionPane.showMessageDialog(null,"Entrega no encontrada. Recuerde introducir el mismo numero de entrega");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Eliminación fallida "+e.getMessage());
        }
         try {
            DefaultTableModel modelo=(DefaultTableModel) jTable3.getModel();
            int filas=jTable3.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    
        try {
            llenartabla3();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        try {
            bloquear();
        } catch (SQLException ex) {
            Logger.getLogger(frmentregacolegio.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btneliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmentregacolegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmentregacolegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmentregacolegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmentregacolegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmentregacolegio().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmentregacolegio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private void inicializar3(){
        jTable3.setModel(getEntregaDefaultTableModel());
        
      
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					btnactualizar.setEnabled(true);
                                        btneliminar.setEnabled(true);
                                        txttipo.setEnabled(true);
                                        txtcantidad.setEnabled(true);
                                        txtdescripcion.setEnabled(true);
                                        txtclasi.setEnabled(true);
                                        
                                    
					ResultSet Entrega = null;
					idFromRowSelected3 = String.valueOf(jTable3.getModel().getValueAt(jTable3.getSelectedRow(),0));
                                        
					
					try {
						Entrega = EncontrarEntrega(idFromRowSelected3);   
                                             
                                                txtnumero.setEnabled(false);
                                                txtnumero.setText(String.valueOf(jTable3.getModel().getValueAt(jTable3.getSelectedRow(),0)));
                                       
						txtcodigo.setText(String.valueOf(Entrega.getInt(1)));
						txtregistro.setText(String.valueOf(Entrega.getInt(2)));
						txttipo.getModel().setSelectedItem(Entrega.getString(3));                                                
						txtclasi.getModel().setSelectedItem(Entrega.getString(4));
                                                txtcantidad.setText(String.valueOf(Entrega.getInt(5)));
                                                txtdescripcion.setText(Entrega.getString(6));
                                                txtfecha.setText(Entrega.getString(7));
                                                
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        btninsertar.setEnabled(false);
				
				}
			});
    }
	private DefaultTableModel getEntregaDefaultTableModel() {
		if (EntregaTableModel == null) {
			EntregaTableModel = new DefaultTableModel(new Object[]{"Numero","Codigo","Registro","Tipo","Casificacion","Cantidad","Descripcion","Fecha"},0);
			try {
				llenartabla3();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return EntregaTableModel;
	}
        private void llenartabla3() throws SQLException{
		
		ResultSet resultado = fillEntrega();
		
		do{			
			this.getEntregaDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getInt(2), resultado.getInt(3), resultado.getString(4), resultado.getString(5),resultado.getInt(6),resultado.getString(7),resultado.getString(8)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillEntrega() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Numero,Codigo,Registro,Tipo,Clasificacion,Cantidad,Descripcion,Fecha FROM control_comida.tblcomida;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarEntrega(String idNumero) throws SQLException{
		
		String sql = "SELECT Codigo,Registro,Tipo,Clasificacion,Cantidad,Descripcion,Fecha FROM tblcomida WHERE tblcomida.Numero = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idNumero);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
                
         
                
       
         }
         
         
         
        DefaultTableModel EntregaTableModel;
        private String idFromRowSelected3 = "";
        
        
    
    private void inicializar2(){
        jTable2.setModel(getColegioDefaultTableModel());
       
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					
                                    
					ResultSet Colegio = null;
					idFromRowSelected1 = String.valueOf(jTable2.getModel().getValueAt(jTable2.getSelectedRow(),0));
                                        
					
					try {
						Colegio = EncontrarColegio(idFromRowSelected1);   
                                             
                                                txtcodigo.setEnabled(false);
                                                txtcodigo.setText(String.valueOf(jTable2.getModel().getValueAt(jTable2.getSelectedRow(),0)));
                                       
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        
				
				}
			});
    }
	private DefaultTableModel getColegioDefaultTableModel() {
		if (ColegioTableModel == null) {
			ColegioTableModel = new DefaultTableModel(new Object[]{"Codigo","Nombre"},0);
			try {
				llenartabla1();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return ColegioTableModel;
	}
        private void llenartabla1() throws SQLException{
		
		ResultSet resultado = fillColegio();
		
		do{			
			this.getColegioDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getString(2)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillColegio() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Codigo,Nombre FROM control_comida.tblcolegio;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarColegio(String idRegistro) throws SQLException{
		
		String sql = "SELECT Nombre FROM tblcolegio WHERE tblcolegio.Codigo = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idRegistro);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
	}
         
        
    
        
        DefaultTableModel ColegioTableModel;
        private String idFromRowSelected1 = "";
    
    
    
    private void inicializar1() throws SQLException
    {
    
        jTable1.setModel(getProveedorDefaultTableModel());
        bloquear();
        limpiar();
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					
                                        
                                        
					ResultSet resultProveedor = null;
					idFromRowSelected = String.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0));
                                        
					
					try {
						resultProveedor = EncontrarProveedor(idFromRowSelected);   
                                             
                                                txtregistro.setEnabled(false);
                                                txtregistro.setText(String.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0)));
                                      	
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        
				
				}
			});
    }
	private DefaultTableModel getProveedorDefaultTableModel() {
		if (proveedorTableModel == null) {
			proveedorTableModel = new DefaultTableModel(new Object[]{"Registro","Razon Social",},0);
			try {
				llenartabla();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return proveedorTableModel;
	}

        private void llenartabla() throws SQLException{
		
		ResultSet resultado = fillProveedores();
		
		do{			
			this.getProveedorDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getString(2)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillProveedores() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Registro,Razon FROM control_comida.tblproveedor;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarProveedor(String idRegistro) throws SQLException{
		
		String sql = "SELECT Razon FROM tblproveedor WHERE tblproveedor.Registro = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idRegistro);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
	}
  
    
        
        DefaultTableModel proveedorTableModel;
        private String idFromRowSelected = "";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btninsertar;
    private javax.swing.JButton btnvolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JComboBox<String> txtclasi;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdescripcion;
    private javax.swing.JTextField txtfecha;
    private javax.swing.JTextField txtnumero;
    private javax.swing.JTextField txtregistro;
    private javax.swing.JComboBox<String> txttipo;
    // End of variables declaration//GEN-END:variables
}
