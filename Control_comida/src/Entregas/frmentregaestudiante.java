/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Entregas;

import ControlC.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAMON
 */
public class frmentregaestudiante extends javax.swing.JFrame {

    /**
     * Creates new form frmentregaestudiante
     */
    public frmentregaestudiante() {
        initComponents();
        inicializar2();
        inicializar();
        inicializar3();
    }
    
    void limpiar(){
        txtcodigo.setText("");
        txtnumero.setText("");
        txtnombre.setText("");
        txtapellido.setText("");
        txtcedula.setText("");
        txtres.setText("");
    }
    
    void bloquear(){
        txtcodigo.setEnabled(false);
        txtnumero.setEnabled(false);
        txtnombre.setEnabled(false);
        txtapellido.setEnabled(false);
        txtfecha.setEnabled(false);
        java.util.Date d=new Date();
        txtfecha.setText(String.valueOf(d));
        btninsertar.setEnabled(false);
        btneliminar.setEnabled(false);
        txtres.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        txtnumero = new javax.swing.JTextField();
        txtcedula = new javax.swing.JTextField();
        txtfecha = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btninsertar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnvolver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtres = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Codigo");

        jLabel2.setText("Numero");

        jLabel3.setText("Cedula");

        jLabel4.setText("Nombre");

        jLabel5.setText("Apellido");

        jLabel6.setText("Fecha");

        txtcodigo.setText("jTextField1");

        txtnumero.setText("jTextField2");

        txtcedula.setText("jTextField3");
        txtcedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcedulaActionPerformed(evt);
            }
        });

        txtfecha.setText("jTextField4");

        txtnombre.setText("jTextField5");
        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });

        txtapellido.setText("jTextField6");
        txtapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setText("Tabla de colegios");

        btninsertar.setText("Entregar");
        btninsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertarActionPerformed(evt);
            }
        });

        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnvolver.setText("Volver");
        btnvolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvolverActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel8.setText("Tabla de Comidas");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel9.setText("Restantes");

        txtres.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnvolver))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtres, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btninsertar)
                .addGap(216, 216, 216)
                .addComponent(btneliminar)
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btninsertar)
                    .addComponent(btneliminar))
                .addGap(22, 22, 22)
                .addComponent(btnvolver))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcedulaActionPerformed
        // TODO add your handling code here:
        txtnombre.setEnabled(true);
        txtcedula.transferFocus();
    }//GEN-LAST:event_txtcedulaActionPerformed

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
        txtapellido.setEnabled(true);
        txtnombre.transferFocus();
    }//GEN-LAST:event_txtnombreActionPerformed

    private void txtapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidoActionPerformed
        // TODO add your handling code here:
        btninsertar.setEnabled(true);
    }//GEN-LAST:event_txtapellidoActionPerformed

    private void btninsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertarActionPerformed
        // TODO add your handling code here:
        //Entregar
        Conexion cc=new Conexion();
        Connection cn=cc.conex();
        String nu,co,ce,no,ap,fe,sql="",sql1="";
        nu=txtnumero.getText();
        fe=txtfecha.getText();
        co=txtcodigo.getText();
        ce=txtcedula.getText();
        no=txtnombre.getText();
        ap=txtapellido.getText();
        sql="insert into tblentrega (Codigo,Numero,Cedula,Nombre,Apellido,Fecha) values(?,?,?,?,?,?)";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            pst.setString(1,co);
            pst.setString(2,nu);
            pst.setString(3,ce);
            pst.setString(4,no);
            pst.setString(5,ap);
            pst.setString(6,fe);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Entrega registrada exitosamente");
                limpiar();
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Entrega fallida"+e.getMessage());
        }
       /* String re;
        re=txtres.getText();
        int re2=Integer.parseInt(re);
        re2=re2-1;
        String valueOf = String.valueOf(re2);
        sql="update tblcomida SET "
                +"Cantidad= '"+valueOf+"',"
                +"WHERE Cedula= '"+ce+"'";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Entrega actualizada exitosamente");
                limpiar();
                
            }else{
                 JOptionPane.showMessageDialog(null,"Entrega no encontrada. Recuerde introducir el mismo numero de entrega");
                limpiar();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Actualización fallida"+e.getMessage());
        }
        
                                       
						
        */
        
       
        
       
        try {
            DefaultTableModel modelo=(DefaultTableModel) jTable3.getModel();
            int filas=jTable3.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        try {
            llenartabla2();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        bloquear();
        
    }//GEN-LAST:event_btninsertarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
         Conexion cc=new Conexion();
        Connection cn=cc.conex();
        String re,sql="";
        re=txtcedula.getText();
        sql="delete from tblentrega where "
                +"Cedula= '"+re+"'";
        try{
            PreparedStatement pst=cn.prepareStatement(sql);
            int registro=pst.executeUpdate();
            if (registro>0) {
                JOptionPane.showMessageDialog(null,"Datos de la entrega eliminada exitosamente");
                limpiar();
            }else{
                JOptionPane.showMessageDialog(null,"Entrega no encontrada. Recuerde introducir el mismo numero de entrega");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Eliminación fallida "+e.getMessage());
        }
         try {
            DefaultTableModel modelo=(DefaultTableModel) jTable3.getModel();
            int filas=jTable3.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    
        try {
            llenartabla2();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        bloquear();
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnvolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvolverActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnvolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmentregaestudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmentregaestudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmentregaestudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmentregaestudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmentregaestudiante().setVisible(true);
            }
        });
    }
    
     private void inicializar2(){
        jTable1.setModel(getColegioDefaultTableModel());
        bloquear();
        limpiar();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					
                                    
					ResultSet Colegio = null;
					idFromRowSelected1 = String.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0));
                                        
					
					try {
						Colegio = EncontrarColegio(idFromRowSelected1);   
                                             
                                                txtcodigo.setEnabled(false);
                                                txtcodigo.setText(String.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0)));
                                       
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        
				
				}
			});
    }
	private DefaultTableModel getColegioDefaultTableModel() {
		if (ColegioTableModel == null) {
			ColegioTableModel = new DefaultTableModel(new Object[]{"Codigo","Nombre"},0);
			try {
				llenartabla1();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return ColegioTableModel;
	}
        private void llenartabla1() throws SQLException{
		
		ResultSet resultado = fillColegio();
		
		do{			
			this.getColegioDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getString(2)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillColegio() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Codigo,Nombre FROM control_comida.tblcolegio;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarColegio(String idRegistro) throws SQLException{
		
		String sql = "SELECT Nombre FROM tblcolegio WHERE tblcolegio.Codigo = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idRegistro);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
	}
         
        
    
        
        DefaultTableModel ColegioTableModel;
        private String idFromRowSelected1 = "";
        
        
         private void inicializar()
    {
        jTable2.setModel(getComidaDefaultTableModel());
        limpiar();
        bloquear();
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					
                                     
                                       
                                   
                                        
					ResultSet resultComida = null;
					idFromRowSelected = String.valueOf(jTable2.getModel().getValueAt(jTable2.getSelectedRow(),0));
                                        
					
					try {
						resultComida = EncontrarComida(idFromRowSelected);   
                                             
                                                txtnumero.setEnabled(false);
                                                txtnumero.setText(String.valueOf(jTable2.getModel().getValueAt(jTable2.getSelectedRow(),0)));
                                                
                                                txtres.setText(String.valueOf(resultComida.getInt(1)));
                                                txtres.setEnabled(false);
                                       
						
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        btninsertar.setEnabled(false);
				
				}
			});
    }
	private DefaultTableModel getComidaDefaultTableModel() {
		if (comidaTableModel == null) {
			comidaTableModel = new DefaultTableModel(new Object[]{"Numero","Cantidad","Descripcion"},0);
			try {
				llenartabla();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return comidaTableModel;
	}
        private void llenartabla() throws SQLException{
		
		ResultSet resultado = fillComida();
		
		do{			
			this.getComidaDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getInt(2), resultado.getString(3)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillComida() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Numero,Cantidad,Descripcion FROM control_comida.tblcomida;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarComida(String idRegistro) throws SQLException{
		
		String sql = "SELECT Cantidad,Descripcion FROM tblcomida WHERE tblcomida.Numero = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idRegistro);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
	}
         
        
        
    
        
        DefaultTableModel comidaTableModel;
        private String idFromRowSelected = "";
        
        
         private void inicializar3()
    {
        jTable3.setModel(getEstudianteDefaultTableModel());
        limpiar();
        bloquear();
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
                                @Override
				public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
					
                                        btneliminar.setEnabled(true);
                                        
                                        txtnombre.setEnabled(true);
                                        txtnombre.setEnabled(true);
                                        txtapellido.setEnabled(true);
                                        
                                        
                                        
					ResultSet resultEstudiante = null;
					idFromRowSelected2 = String.valueOf(jTable3.getModel().getValueAt(jTable3.getSelectedRow(),0));
                                        
					
					try {
						resultEstudiante = EncontrarEstudiante(idFromRowSelected2);   
                                             
                                                txtcedula.setEnabled(false);
                                                txtcedula.setText(String.valueOf(jTable3.getModel().getValueAt(jTable3.getSelectedRow(),0)));
                                       
						txtcodigo.setText(String.valueOf(resultEstudiante.getInt(1)));
						txtnumero.setText(String.valueOf(resultEstudiante.getInt(2)));
						txtnombre.setText(resultEstudiante.getString(3));                                                
						txtapellido.setText(resultEstudiante.getString(4));
                                                txtfecha.setText(resultEstudiante.getString(5));
						
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                                        btninsertar.setEnabled(false);
				
				}
			});
    }
	private DefaultTableModel getEstudianteDefaultTableModel() {
		if (estudianteTableModel == null) {
			estudianteTableModel = new DefaultTableModel(new Object[]{"Cedula","Codigo","Numero","Nombre","Apellido","Fecha"},0);
			try {
				llenartabla2();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return estudianteTableModel;
	}
        private void llenartabla2() throws SQLException{
		
		ResultSet resultado = fillEstudiante();
		
		do{			
			this.getEstudianteDefaultTableModel().addRow(new Object []{resultado.getInt(1),resultado.getInt(2), resultado.getInt(3), resultado.getString(4), resultado.getString(5),resultado.getString(6)});
			}
		while (resultado.next());
        }
                
         public ResultSet fillEstudiante() throws SQLException{
             
             Conexion cc=new Conexion();
             Connection cn=cc.conex();
             String sql="SELECT Cedula,Codigo,Numero,Nombre,Apellido,Fecha FROM control_comida.tblentrega;";
             PreparedStatement pst=cn.prepareStatement(sql);
             ResultSet resultado = pst.executeQuery();	
		
		resultado.first();
		
		return resultado;
	
	}
         public ResultSet EncontrarEstudiante(String idRegistro) throws SQLException{
		
		String sql = "SELECT Codigo,Numero,Nombre,Apellido,Fecha FROM tblentrega WHERE tblentrega.Cedula = ?;";
		
                Conexion cc=new Conexion();
                Connection cn=cc.conex();
		PreparedStatement pst=cn.prepareStatement(sql);
		
		pst.setString(1,idRegistro);
		
		pst.execute();
		
		ResultSet result = pst.getResultSet();
		
		result.next();
		
		return result;
	}
         
        
    
        
        DefaultTableModel estudianteTableModel;
        private String idFromRowSelected2 = "";
        
        
    
    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btninsertar;
    private javax.swing.JButton btnvolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtcedula;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtfecha;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtnumero;
    private javax.swing.JTextField txtres;
    // End of variables declaration//GEN-END:variables
}
